image: mcr.microsoft.com/dotnet/sdk:8.0

variables:
  OBJECTS_DIRECTORY: 'obj'
  NUGET_PACKAGES_DIRECTORY: '.nuget'
  SOURCE_CODE_PATH: '*/*/'

cache:
  key: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
  paths:
    - '$SOURCE_CODE_PATH$OBJECTS_DIRECTORY/project.assets.json'
    - '$SOURCE_CODE_PATH$OBJECTS_DIRECTORY/*.csproj.nuget.*'
    - '$NUGET_PACKAGES_DIRECTORY'
  policy: pull-push

before_script:
  - 'dotnet restore --packages $NUGET_PACKAGES_DIRECTORY'

build:
  stage: build
  script:
    - 'dotnet build --no-restore'

tests:
  stage: test
  script:
    - 'dotnet test --no-restore --logger:"junit;LogFilePath=$CI_PROJECT_DIR/test-result.xml" --collect:"XPlat Code Coverage" --results-directory cobertura'
  artifacts:
    reports:
      junit: test-result.xml
      coverage_report:
        coverage_format: cobertura
        path: cobertura/*/coverage.cobertura.xml

.publish: &publish
  stage: deploy
  script:
    - 'dotnet publish -r ${RID} -o deacc_publish_${RID} --self-contained -p:PublishSingleFile=true DeACC/DeACC.csproj'
  artifacts:
    expire_in: 1 week
    paths:
      - deacc_publish_${RID}/*
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

publish win-x64:
  <<: *publish
  variables:
    RID: win-x64
    
publish win-arm64:
  <<: *publish
  variables:
    RID: win-arm64

publish linux-x64:
  <<: *publish
  variables:
    RID: linux-x64

publish linux-arm:
  <<: *publish
  variables:
    RID: linux-arm

publish linux-arm64:
  <<: *publish
  variables:
    RID: linux-arm64
